<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sh.carexx.uc.dao.OrderSettleMapper">
	<resultMap id="BaseResultMap" type="com.sh.carexx.model.uc.OrderSettle">
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="schedule_id" jdbcType="BIGINT" property="scheduleId" />
		<result column="settle_ratio" jdbcType="DECIMAL" property="settleRatio" />
		<result column="staff_id" jdbcType="INTEGER" property="staffId" />
		<result column="staff_settle_amt" jdbcType="DECIMAL" property="staffSettleAmt" />
		<result column="adjust_amt" jdbcType="DECIMAL" property="adjustAmt" />
		<result column="settle_inst_id" jdbcType="INTEGER" property="settleInstId" />
		<result column="inst_settle_amt" jdbcType="DECIMAL" property="instSettleAmt" />
		<result column="settle_status" jdbcType="TINYINT" property="settleStatus" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
		<result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
	</resultMap>
	<sql id="Base_Column_List">
		id, schedule_id, settle_ratio, staff_id, staff_settle_amt, adjust_amt, 
		settle_inst_id, inst_settle_amt, settle_status, create_time, modify_time
	</sql>
	<select id="selectById" parameterType="java.lang.Long" resultMap="BaseResultMap">
		select
			<include refid="Base_Column_List" />
		from
			carexx_order_settle
		where id = #{id,jdbcType=BIGINT}
	</select>
	<select id="selectByScheduleId" parameterType="java.lang.Long" resultMap="BaseResultMap">
		select
			<include refid="Base_Column_List" />
		from
			carexx_order_settle
		where schedule_id = #{scheduleId,jdbcType=BIGINT}
	</select>
	<select id="selectOrderSettleCount" parameterType="com.sh.carexx.bean.order.WorkQuantityReportFormBean" resultType="java.util.Map">
		SELECT
			cis.id staffId,
			cis.real_name staffName,
			cis.person_type personType,
			count(DISTINCT cos.order_no) serviceCustomerNum,
			SUM(os.staff_settle_amt) sumStaffSettleAmt,
			SUM(os.inst_settle_amt) sumInstSettleAmt,
			SUM(os.adjust_amt) settleAdjustAmt
		FROM
			carexx_order_settle os
		LEFT JOIN carexx_customer_order_schedule cos ON cos.id = os.schedule_id
		LEFT JOIN carexx_customer_order co ON cos.order_no = co.order_no
		LEFT JOIN carexx_inst_staff cis ON cos.service_staff_id = cis.id
		LEFT JOIN carexx_inst_customer ic ON co.customer_id = ic.id
		LEFT JOIN carexx_care_service cs ON co.service_id = cs.id
		LEFT JOIN carexx_work_type wt ON cs.work_type_id = wt.id
		LEFT JOIN carexx_care_inst_sys ccis ON co.inst_sys_id = ccis.id
		<where>
			co.order_status = 6
			<if test="serviceStartTime != null and serviceStartTime != '' ">
				AND cos.service_start_time >= #{serviceStartTime}
			</if>
			<if test="serviceEndTime != null and serviceEndTime != '' ">
				AND cos.service_start_time <![CDATA[<=]]> #{serviceEndTime}
			</if>
			<if test="instSysId != null">
				AND ccis.id = #{instSysId,jdbcType=INTEGER}
			</if>
			<if test="instId != null and instId > 0">
				AND co.inst_id = #{instId,jdbcType=INTEGER}
			</if>
			<if test="personType != null">
				AND cis.person_type = #{personType,jdbcType=INTEGER}
			</if>
			<if test="workTypeId != null">
				AND wt.id = #{workTypeId,jdbcType=INTEGER}
			</if>
			<if test="staffName != null and staffName != '' ">
				AND cis.real_name LIKE CONCAT('%', '${staffName}', '%')
			</if>
			<if test="settleStatus != null and settleStatus == 1">
				AND os.settle_status in (2,3)
			</if>
			<if test="settleStatus != null and settleStatus == 2">
				AND os.settle_status = 3
			</if>
		</where>
		GROUP BY
			staffId
	</select>
	
	<insert id="insert" parameterType="com.sh.carexx.model.uc.OrderSettle">
		insert into
			carexx_order_settle (
			schedule_id,
			settle_ratio,
			staff_id,
			staff_settle_amt,
			adjust_amt,
			settle_inst_id,
			inst_settle_amt,
			settle_status, 
			create_time
		)
		values (
			#{scheduleId,jdbcType=BIGINT},
			#{settleRatio,jdbcType=DECIMAL},
			#{staffId,jdbcType=INTEGER},
			#{staffSettleAmt,jdbcType=DECIMAL},
			#{adjustAmt,jdbcType=DECIMAL},
			#{settleInstId,jdbcType=INTEGER},
			#{instSettleAmt,jdbcType=DECIMAL},
			#{settleStatus,jdbcType=TINYINT},
			now()
		)
	</insert>
	
	<update id="batchCloseUpdate" parameterType="java.util.List">
	    update 
	    	carexx_order_settle 
	    set  
	    	settle_status = 3
	    where settle_status = 2 and schedule_id in
        <foreach collection="list" item="item" index="index" 
            separator="," open="(" close=")">
            #{item.id}
        </foreach>
 	</update>
	<update id="batchOpenUpdate" parameterType="java.util.List">
	    update 
	    	carexx_order_settle 
	    set  
	    	settle_status = 2
	    where settle_status = 3 and schedule_id in
        <foreach collection="list" item="item" index="index" 
            separator="," open="(" close=")">
            #{item.id}
        </foreach>
 	</update>
	<update id="updateStatus">
		UPDATE
			carexx_order_settle
		SET
			settle_status = #{targetStatus, jdbcType=TINYINT},
			modify_time = now()
		WHERE
			schedule_id = #{scheduleId, jdbcType=BIGINT} and settle_status = #{srcStatus, jdbcType=TINYINT}
	</update>
	<update id="updateSettleAmt" parameterType="com.sh.carexx.model.uc.OrderSettle">
		update
			carexx_order_settle
		set 
			staff_settle_amt = #{staffSettleAmt,jdbcType=DECIMAL},
			inst_settle_amt = #{instSettleAmt,jdbcType=DECIMAL},
			adjust_amt = #{adjustAmt,jdbcType=DECIMAL},
			modify_time = now()
		where schedule_id = #{scheduleId,jdbcType=BIGINT}
	</update>
</mapper>